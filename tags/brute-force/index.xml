<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Brute Force on Gautam Manohar</title>
    <link>https://gautammanohar.com/tags/brute-force/</link>
    <description>Recent content in Brute Force on Gautam Manohar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Jul 2018 00:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://gautammanohar.com/tags/brute-force/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Project Euler 44: Pentagonal Numbers</title>
      <link>https://gautammanohar.com/euler/44/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/44/</guid>
      <description>Problem Statement Pentagonal numbers are given by the formula
\begin{equation*} P_n = \frac{n(3n-1)}{2}. \end{equation*}
The first ten pentagonal numbers are
\begin{equation} 1,5,12,22,35,51,70,92,117,145,\ldots \end{equation}
It can be seen that \(P_4 + P_7 = 22 + 70 = 92 = P_8\). Also, \(P_7 - P_5 = 70 - 35 = 35 = P_5\) is also pentagonal. Generalizing for a given \(k\), find all \(P_n\), where \(n &amp;lt; N\), such that at least one of \(P_n \pm P_{n-k}\) is pentagonal.</description>
    </item>
    
    <item>
      <title>Project Euler 48: Self Powers</title>
      <link>https://gautammanohar.com/euler/48/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/48/</guid>
      <description>Problem Statement The sum \(1^1 + 2^2 + \cdots + 10^{10} = 10405071317\). Find the last ten digits of
\begin{equation} \sum\limits_{n=1}^N n^n. \end{equation}
My Algorithm This problem is a simple bignum computation. Because we only need the last ten digits, it suffices to carry out all calculations modulo \(10^{10}\). In particular, we use modular exponentiation. This solution has time complexity \(O(N\log N)\).</description>
    </item>
    
    <item>
      <title>Project Euler 52: Permuted Multiples</title>
      <link>https://gautammanohar.com/euler/52/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/52/</guid>
      <description>Problem Statement It can be seen that the number \(125874\) and its double, \(251748\), contain exactly the same digits, but in a different order. Given \(N\), find all the positive integers up \(x \le N\) such that \(2x,3x,\ldots,Kx\) contain the same digits.
My Algorithm To check whether two strings are permutations of each other, we can check if they are equal after sorting. To check whether an array contains only strings that are permutations of each other, we take the first element of the array and apply the above procedure to each other string in the array.</description>
    </item>
    
    <item>
      <title>Project Euler 55: Lychrel Numbers</title>
      <link>https://gautammanohar.com/euler/55/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/55/</guid>
      <description>Problem Statement If we take 47, reverse it, and add, we get \(47 + 74 = 121\), which is a palindrome. Not all numbers produce palindromes so quickly. For example,
\begin{equation*} \begin{split} 349 + 943 &amp;amp;= 1292, \\
1292 + 2921 &amp;amp;= 4213, \\
4213 + 3124 &amp;amp;= 7337. \end{split} \end{equation*}
That is, 349 takes 3 iterations to arrive at a palindrome. Although no one has proved it yet, it is thought that some numbers, like 196, never produce a palindrome.</description>
    </item>
    
    <item>
      <title>Project Euler 56: Powerful Digit Sum</title>
      <link>https://gautammanohar.com/euler/56/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/56/</guid>
      <description>Problem Statement Considering natural numbers \(a,b \le N\), which number of the form \(a^b\) has the maximum digital sum?
My Algorithm For each \(a,b \le N\), we simply compute \(a^b\) in \(\log b\) time and store its digital sum if it is maximal so far. This solution has time complexity \(O(N^2\log N)\).</description>
    </item>
    
    <item>
      <title>Project Euler 58: Spiral Primes</title>
      <link>https://gautammanohar.com/euler/58/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/58/</guid>
      <description>Problem Statement Starting with 1 and spiralling clockwise in the following way, a square spiral with side length 7 is formed. { width=45% } It is interesting to note that 8 out of the 13 numbers lying along both diagonals are prime; that is, a ratio of \(\frac{8}{13} \approx 62\%\). If one complete new layer is wrapped around the spiral above, a square spiral with side length 9 will be formed.</description>
    </item>
    
    <item>
      <title>Project Euler 32: Pandigital Products</title>
      <link>https://gautammanohar.com/euler/32/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/32/</guid>
      <description>Problem Statement We shall say that an $N$-digit number is pandigital if it makes use of all the digits 1 to \(N\) exactly once; for example, the 5-digit number 15234 is 1 through 5 pandigital. The product 7254 is unusual, as the identity \(39 \cdot 186 = 7254\) containing multiplicand, multiplier, and product is 1 through 9 pandigital. Find the sum of all products whose multiplicand/multiplier/product identity can be written as a 1 through \(N\) pandigital.</description>
    </item>
    
    <item>
      <title>Project Euler 34: Digit Factorials</title>
      <link>https://gautammanohar.com/euler/34/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/34/</guid>
      <description>Problem Statement 145 is a curious number, as \(1! + 4! + 5! = 145\). Find the sum of all numbers that are the sum of the factorials of their digits. Note that \(1! = 1\) and \(2! = 2\) are not sums, as they contain only one digit.
My Algorithm We use a combinatorial approach similar to Project Euler 30. The sum of the factorials of the digits of a number with \(d\) digits is \(d\cdot9!</description>
    </item>
    
    <item>
      <title>Project Euler 35: Circular Primes</title>
      <link>https://gautammanohar.com/euler/35/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/35/</guid>
      <description>Problem Statement The number 197 is called a circular prime because all rotations of the digits (197,719,917) are prime. There are thirteen such prime under 100: 2, 3, 5, 7, 11, 13, 17, 31, 37, 71, 73, 79, and 97. What is the sum of all circular primes less than \(N\)?
My Algorithm A permutation of a number \(n\) cannot be greater than the smallest power of 10 not more than \(n\).</description>
    </item>
    
    <item>
      <title>Project Euler 36: Double Base Palindromes</title>
      <link>https://gautammanohar.com/euler/36/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/36/</guid>
      <description>Problem Statement The decimal number \(65 = 1001001001_2\) is palindromic in both decimal and binary. Find the sum of all natural numers less than \(N\) which are palindromic in base 10 and base \(K\).
My Algorithm We need two things to solve this problem: a way to convert a number from base 10 to base \(K\) and a way to generate palindromes. First, let&amp;rsquo;s think about how numbers are written in base 10.</description>
    </item>
    
    <item>
      <title>Project Euler 37: Truncatable Primes</title>
      <link>https://gautammanohar.com/euler/37/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/37/</guid>
      <description>Problem Statement The number 3797 has an interesting property. Being prime itself, it is possible to continuously remove digits from left to right, and remain prime at each stage: 3797, 797, 97, 7. Similarly, we can remove digits from right to left: 3797, 379, 37, 3. Find the sum of primes that are truncatable from left to right and right to left less than \(N\).
My Algorithm A prime is greater than all of its truncations.</description>
    </item>
    
    <item>
      <title>Project Euler 22: Names Scores</title>
      <link>https://gautammanohar.com/euler/22/</link>
      <pubDate>Sat, 23 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/22/</guid>
      <description>Problem Statement You are given around five-thousand names. Begin by sorting them by alphabetical order. Then working out the alphabetical value of each name, multiply this value by the alphabetical position of the name in the list. For example, suppose COLIN is the 983rd element of a sorted list of names. It is worth \(3 + 15 + 12 + 9 + 14 = 53\), so this name has a score of \(53 \cdot 983 = 49714\).</description>
    </item>
    
    <item>
      <title>Project Euler 20: Factorial Digit Sum</title>
      <link>https://gautammanohar.com/euler/20/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/20/</guid>
      <description>Problem Statement Find the sum of the digits in \(N!\).
My Algorithm With Python, an \(O(1)\) solution is simple. We compute \(n!\), convert it to a string, and sum the digits.</description>
    </item>
    
    <item>
      <title>Project Euler 27: Quadratic Primes</title>
      <link>https://gautammanohar.com/euler/27/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/27/</guid>
      <description>Problem Statement Euler published the remarkable quadratic equation
\begin{equation*} n^2 + 41n + 41. \end{equation*}
It turns out that the formula will produce 40 primes for the consecutive integer values \(0 \le n \le 39\). However, when \(n = 40\), we have \(40^2 + 40 + 41 = 41(40+1) + 41\), which is divisiblye by 41, and certainly when \(n = 41\), the expression \(41^2 + 41 + 41\) is clearly divisible by 41.</description>
    </item>
    
    <item>
      <title>Project Euler 21: Amicable Numbers</title>
      <link>https://gautammanohar.com/euler/21/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/21/</guid>
      <description>Problem Statement Let \(d(n)\) be defined as the sum of proper divisors of \(n\) (numbers less than \(n\) that divide evenly into \(n\)). If \(d(a) = b\) and \(d(b) = a\), where \(a \neq b\), then \(a\) and \(b\) are an amicable pair and each of \(a\) and \(b\) are amicable numbers. For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 and 110; therefore \(d(220) = 284\).</description>
    </item>
    
    <item>
      <title>Project Euler 23: Non-abundant Sums</title>
      <link>https://gautammanohar.com/euler/23/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/23/</guid>
      <description>Problem Statement A perfect number is a number for which the sum of its proper divisors is exactly equal to the number. For example, the sum of the proper divisors of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect number. A number \(n\) is called deficient if the sum of its proper divisors is less than \(n\) and it is called abundant if this sum exceeds \(n\).</description>
    </item>
    
    <item>
      <title>Project Euler 16: Power Digit Sum</title>
      <link>https://gautammanohar.com/euler/16/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/16/</guid>
      <description>Problem Statement What is the sum of the digits of \(2^N\)?
My Algorithm Python has built-in infinite precision integer arithmetic, so this problem is easily done. We find \(2^N\) using built-in modular exponentiation in \(O(\log N)\) time. The length of this number is \(\lceil N\log_{10} 2 \rceil \in O(N)\). And so our solution has complexity \(O(N \log N)\).</description>
    </item>
    
    <item>
      <title>Project Euler 11: Largest Product in a Grid</title>
      <link>https://gautammanohar.com/euler/11/</link>
      <pubDate>Sun, 10 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/11/</guid>
      <description>Problem Statement In the 20-by-20 grid below, four numbers have been marked in bold. { width=95% } The product of these numbers is \(26 \cdot 63 \cdot 78 \cdot 14 = 1788696\). What is the greatest product of four adjacent numbers in the same direction (up, down, left, right, or diagonally) in the 20×20 grid?
My Algorithm The important thing in this problem is to be careful of boundary conditions.</description>
    </item>
    
    <item>
      <title>Project Euler 13: Large Sum</title>
      <link>https://gautammanohar.com/euler/13/</link>
      <pubDate>Sun, 10 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/13/</guid>
      <description>Problem Statement Find the first ten digits of the sum of \(N\) 50-digit numbers.
My Algorithm Thanks to Python&amp;rsquo;s built-in ability to handle infinitely large integers, this problem is a piece of cake. We read in the numbers, add them, convert the result to a string, and output the first ten characters.
Other Solutions In languages without big integer support, we would need an algorithm to add big integers, using string arrays and the carrying method often taught in elementary schools.</description>
    </item>
    
    <item>
      <title>Project Euler 4: Largest Palindrome Product</title>
      <link>https://gautammanohar.com/euler/4/</link>
      <pubDate>Sun, 10 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/4/</guid>
      <description>Problem Statement A palindromic number reads the same both ways. The smallest 6 digit palindrome made from the product of two 3-digit numbers is \(101101 = 143 \cdot 707\). Find the largest palindrome made from the product of two 3-digit numbers which is less than \(N\).
My Algorithm We compute all products \(ij\) of numbers \(100 \le i,j \le 999\) and keep the palindromic ones. Then we sort the palindromic products and perform a binary search for the greatest element of the array strictly less than \(N\).</description>
    </item>
    
    <item>
      <title>Project Euler 8: Largest Product in a Series</title>
      <link>https://gautammanohar.com/euler/8/</link>
      <pubDate>Sun, 10 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>https://gautammanohar.com/euler/8/</guid>
      <description>Problem Statement Find the greatest product of \(K\) consecutive digits in the given \(N\) digit number.
My Algorithm We use a brute force solution. There are \(N-K+1\) possible $K$-length substrings of a string of length \(N\). We convert the given number to a string, find the substrings, and multiply the digits in them. We then find the maximal product. This is easily done with time complexity \(O(K(N-K+1))\).</description>
    </item>
    
  </channel>
</rss>